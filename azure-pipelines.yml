# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '18.x'
  SYSTEM_DEBUG: 'true'

steps:

# Install Node
- task: NodeTool@0
  inputs:
    versionSpec: '$(NODE_VERSION)'
  displayName: 'Install Node.js $(NODE_VERSION)'

# Optional: cache npm to speed up and make installs more reliable
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: ~/.npm
  displayName: 'Cache npm'

# Install deps
- script: npm ci --loglevel=warn
  displayName: 'Install dependencies (npm ci)'
  env:
    npm_config_cache: '~/.npm'

# Build (change workingDirectory if your app is not in repo root)
- script: npm run build
  displayName: 'Build React app'

# Run tests and emit junit.xml for Azure DevOps
- script: npm test -- --ci --reporters=default --reporters=jest-junit --coverage
  displayName: 'Run tests (Jest)'
  env:
    # ensure jest-junit writes the file where PublishTestResults can find it
    JEST_JUNIT_OUTPUT: '$(Build.SourcesDirectory)/junit.xml'
  continueOnError: false

# Publish test results to Azure DevOps
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(Build.SourcesDirectory)/junit.xml'
    testRunTitle: 'Menu Feature Tests'
    testResultsFormat: 'JUnit'
  condition: succeededOrFailed()
  displayName: 'Publish test results'

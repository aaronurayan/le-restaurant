# Azure Pipelines YAML file for a Menu Feature
trigger:
- Menu-Feature

pr:
  branches:
    include:
      - Menu-Feature

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '22.x'
  SYSTEM_DEBUG: 'true'
  FRONTEND_DIR: 'frontend'

steps:

# Install Node
- task: NodeTool@0
  inputs:
    versionSpec: '$(NODE_VERSION)'
  displayName: 'Install Node.js $(NODE_VERSION)'

# Optional: cache npm to speed up installs
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: ~/.npm
  displayName: 'Cache npm'

# Install deps
- script: |
    cd ${FRONTEND_DIR:-.}
    npm ci --loglevel=warn
  displayName: 'Install dependencies (npm ci)'
  env:
    npm_config_cache: '~/.npm'

# Ensure jest-junit is present (install temporarily if missing)
- script: |
    cd ${FRONTEND_DIR:-.}
    if ! npm ls jest-junit >/dev/null 2>&1; then
      echo "jest-junit not found â€” installing temporarily (no-save)"
      npm i --no-save jest-junit
    else
      echo "jest-junit already present"
    fi
  displayName: 'Ensure jest-junit reporter'

# Build (adjust if your build script/path differs)
- script: |
    cd ${FRONTEND_DIR:-.}
    npm run build
  displayName: 'Build React app'

# Run tests and emit junit.xml for Azure DevOps
- script: |
    cd ${FRONTEND_DIR:-.}
    npm test -- --ci --reporters=default --reporters=jest-junit --coverage
  displayName: 'Run tests (Jest)'
  env:
    # path where junit.xml will be written (PublishTestResults will look here)
    JEST_JUNIT_OUTPUT: '$(Build.SourcesDirectory)/$(FRONTEND_DIR)/junit.xml'
  continueOnError: false

# Publish test results to Azure DevOps
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(Build.SourcesDirectory)/$(FRONTEND_DIR)/junit.xml'
    testRunTitle: 'Menu Feature Tests'
    testResultsFormat: 'JUnit'
  condition: succeededOrFailed()
  displayName: 'Publish test results'

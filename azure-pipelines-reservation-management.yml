# Azure DevOps Pipeline for Reservation Management Feature

trigger:
  branches:
    include:
      - main

variables:
  # Node.js version for frontend
  nodeVersion: '18.x'
  # Java version for backend
  javaVersion: '17'

stages:
# =============================================================================
# CONTINUOUS INTEGRATION STAGE
# =============================================================================
- stage: CI
  displayName: 'Continuous Integration for Reservation Management'
  jobs:

  # Build Backend Reservation Management Feature
  - job: BuildBackendReservationManagement
    displayName: 'Build Backend Reservation Management Feature'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    # Setup JDK
    - task: JavaToolInstaller@1
      displayName: 'Set up JDK $(javaVersion)'
      inputs:
        version: '$(javaVersion)'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    # Cache Gradle Dependencies
    - task: Cache@2
      displayName: 'Cache Gradle Dependencies'
      inputs:
        key: 'gradle | "$(Agent.OS)" | backend/gradle/wrapper/gradle-wrapper.properties'
        restoreKeys: |
          gradle | "$(Agent.OS)"
          gradle
        path: '~/.gradle'

    # Build Backend
    - script: |
        cd backend
        chmod +x gradlew # Ensure gradlew is executable
        ./gradlew build --stacktrace --info
      displayName: 'Build Backend Reservation Management Feature'

    # Publish Backend Build Artifacts
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Backend Build Artifacts'
      inputs:
        pathToPublish: 'backend/build/libs'
        artifactName: 'le-restaurant-backend'
        publishLocation: 'Container'

  # Build Frontend Reservation Management Feature
  - job: BuildFrontendReservationManagement
    displayName: 'Build Frontend Reservation Management Feature'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    # Setup Node.js Environment
    - task: NodeTool@0
      displayName: 'Setup Node.js $(nodeVersion)'
      inputs:
        versionSpec: '$(nodeVersion)'

    # Clean and Install Dependencies
    - script: |
        cd frontend
        rm -rf node_modules package-lock.json
        npm install
      displayName: 'Clean and Install Frontend Dependencies'

    # Install Rollup (Explicitly)
    - script: |
        cd frontend
        npm install rollup
      displayName: 'Install Rollup'

    # Log Installed Dependencies
    - script: |
        cd frontend
        npm list --depth=0
      displayName: 'Log Installed Dependencies'

    # Build Frontend
    - script: |
        cd frontend
        npm run build
      displayName: 'Build Frontend Reservation Management Feature'

    # Publish Frontend Build Artifacts
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Frontend Build Artifacts'
      inputs:
        pathToPublish: 'frontend/dist'
        artifactName: 'le-restaurant-frontend'
        publishLocation: 'Container'